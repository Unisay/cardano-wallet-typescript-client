/**
 * Cardano Wallet Backend API
 * <p align=\"right\"><img style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"></img></p> 
 *
 * OpenAPI spec version: v2022-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GetUTxOsStatistics200ResponseTotal } from './GetUTxOsStatistics200ResponseTotal';
import { HttpFile } from '../http/http';

export class ApiFee {
    'estimatedMin': GetUTxOsStatistics200ResponseTotal;
    'estimatedMax': GetUTxOsStatistics200ResponseTotal;
    /**
    * A list of minimum coin values that each output in a payment must satisfy. The values themselves depends on two things:    - (a) Some updatable protocol parameters fixed by the network.   - (b) The nature of the outputs (i.e. the kind of assets it includes).  The list is a direct 1:1 mapping of the requested outputs. Said differently, it has the **same number of items** and **items are ordered in the same way** as **requested outputs** are ordered. In the case where there's no explicitly requested outputs (e.g. when calculating fee for delegation), this list is empty.  For example, an output containing only `Ada` may require to be of at least `1 Ada`. An output containing only an hypothetical `AppleCoin` may require to also carry a minimum of `1.2 Ada`. Note that no matter what, a minimum coin value is always given in Lovelace / Ada.  > ℹ️ This mechanism is used by the protocol to protect against flooding of the network with worthless assets. By requiring a minimum coin value to every UTxO, they are given an intrinsic value indexed itself on the value of Ada. 
    */
    'minimumCoins': Array<GetUTxOsStatistics200ResponseTotal>;
    'deposit': GetUTxOsStatistics200ResponseTotal;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "estimatedMin",
            "baseName": "estimated_min",
            "type": "GetUTxOsStatistics200ResponseTotal",
            "format": ""
        },
        {
            "name": "estimatedMax",
            "baseName": "estimated_max",
            "type": "GetUTxOsStatistics200ResponseTotal",
            "format": ""
        },
        {
            "name": "minimumCoins",
            "baseName": "minimum_coins",
            "type": "Array<GetUTxOsStatistics200ResponseTotal>",
            "format": ""
        },
        {
            "name": "deposit",
            "baseName": "deposit",
            "type": "GetUTxOsStatistics200ResponseTotal",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ApiFee.attributeTypeMap;
    }

    public constructor() {
    }
}

