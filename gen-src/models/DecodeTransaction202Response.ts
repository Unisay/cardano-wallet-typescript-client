/**
 * Cardano Wallet Backend API
 * <p align=\"right\"><img style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"></img></p> 
 *
 * OpenAPI spec version: v2022-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DecodeTransaction202ResponseCertificatesInner } from './DecodeTransaction202ResponseCertificatesInner';
import { DecodeTransaction202ResponseInputsInner } from './DecodeTransaction202ResponseInputsInner';
import { DecodeTransaction202ResponseMint } from './DecodeTransaction202ResponseMint';
import { DecodeTransaction202ResponseOutputsInner } from './DecodeTransaction202ResponseOutputsInner';
import { DecodeTransaction202ResponseValidityInterval } from './DecodeTransaction202ResponseValidityInterval';
import { DecodeTransaction202ResponseWithdrawalsInner } from './DecodeTransaction202ResponseWithdrawalsInner';
import { GetUTxOsStatistics200ResponseTotal } from './GetUTxOsStatistics200ResponseTotal';
import { SignMetadataRequestMetadata } from './SignMetadataRequestMetadata';
import { HttpFile } from '../http/http';

export class DecodeTransaction202Response {
    /**
    * A unique identifier for this transaction
    */
    'id': string;
    'fee': GetUTxOsStatistics200ResponseTotal;
    /**
    * Inputs that could be external or belong to the wallet. 
    */
    'inputs': Array<DecodeTransaction202ResponseInputsInner>;
    /**
    * Outputs that could be external or belong to the wallet. 
    */
    'outputs': Array<DecodeTransaction202ResponseOutputsInner>;
    /**
    * Inputs that could be external or belong to the wallet. 
    */
    'collateral'?: Array<DecodeTransaction202ResponseInputsInner>;
    /**
    * Outputs that could be external or belong to the wallet. 
    */
    'collateralOutputs'?: Array<DecodeTransaction202ResponseOutputsInner>;
    /**
    * Withdrawals that could be external or belong to the wallet. 
    */
    'withdrawals': Array<DecodeTransaction202ResponseWithdrawalsInner>;
    'mint': DecodeTransaction202ResponseMint;
    'burn': DecodeTransaction202ResponseMint;
    'certificates': Array<DecodeTransaction202ResponseCertificatesInner>;
    'metadata'?: SignMetadataRequestMetadata;
    /**
    * A list of deposits associated with a transaction.
    */
    'depositsTaken'?: Array<GetUTxOsStatistics200ResponseTotal>;
    /**
    * A list of deposits associated with a transaction.
    */
    'depositsReturned'?: Array<GetUTxOsStatistics200ResponseTotal>;
    /**
    * Indicates whether the phase-2 monetary policy script (e.g. Plutus script) used in the transaction validated or not. Validity may be null if this transaction was from an era that doesn't support phase-2 monetary policy scripts, or is a pending transaction (we don't know if validation passed or failed until the transaction hits the ledger). 
    */
    'scriptValidity'?: DecodeTransaction202ResponseScriptValidityEnum;
    'validityInterval'?: DecodeTransaction202ResponseValidityInterval;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "hex"
        },
        {
            "name": "fee",
            "baseName": "fee",
            "type": "GetUTxOsStatistics200ResponseTotal",
            "format": ""
        },
        {
            "name": "inputs",
            "baseName": "inputs",
            "type": "Array<DecodeTransaction202ResponseInputsInner>",
            "format": ""
        },
        {
            "name": "outputs",
            "baseName": "outputs",
            "type": "Array<DecodeTransaction202ResponseOutputsInner>",
            "format": ""
        },
        {
            "name": "collateral",
            "baseName": "collateral",
            "type": "Array<DecodeTransaction202ResponseInputsInner>",
            "format": ""
        },
        {
            "name": "collateralOutputs",
            "baseName": "collateral_outputs",
            "type": "Array<DecodeTransaction202ResponseOutputsInner>",
            "format": ""
        },
        {
            "name": "withdrawals",
            "baseName": "withdrawals",
            "type": "Array<DecodeTransaction202ResponseWithdrawalsInner>",
            "format": ""
        },
        {
            "name": "mint",
            "baseName": "mint",
            "type": "DecodeTransaction202ResponseMint",
            "format": ""
        },
        {
            "name": "burn",
            "baseName": "burn",
            "type": "DecodeTransaction202ResponseMint",
            "format": ""
        },
        {
            "name": "certificates",
            "baseName": "certificates",
            "type": "Array<DecodeTransaction202ResponseCertificatesInner>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "SignMetadataRequestMetadata",
            "format": ""
        },
        {
            "name": "depositsTaken",
            "baseName": "deposits_taken",
            "type": "Array<GetUTxOsStatistics200ResponseTotal>",
            "format": ""
        },
        {
            "name": "depositsReturned",
            "baseName": "deposits_returned",
            "type": "Array<GetUTxOsStatistics200ResponseTotal>",
            "format": ""
        },
        {
            "name": "scriptValidity",
            "baseName": "script_validity",
            "type": "DecodeTransaction202ResponseScriptValidityEnum",
            "format": ""
        },
        {
            "name": "validityInterval",
            "baseName": "validity_interval",
            "type": "DecodeTransaction202ResponseValidityInterval",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DecodeTransaction202Response.attributeTypeMap;
    }

    public constructor() {
    }
}


export type DecodeTransaction202ResponseScriptValidityEnum = "valid" | "invalid" ;

