/**
 * Cardano Wallet Backend API
 * <p align=\"right\"><img style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"></img></p> 
 *
 * OpenAPI spec version: v2022-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DelegationCertificateBelongingToTheWallet } from './DelegationCertificateBelongingToTheWallet';
import { DelegationCertificateNotBelongingToTheWallet } from './DelegationCertificateNotBelongingToTheWallet';
import { GenesisOrMIRCertificate } from './GenesisOrMIRCertificate';
import { PoolDeregistrationCertificate } from './PoolDeregistrationCertificate';
import { PoolRegistrationCertificate } from './PoolRegistrationCertificate';
import { PoolRegistrationCertificatePoolCost } from './PoolRegistrationCertificatePoolCost';
import { PoolRegistrationCertificatePoolMargin } from './PoolRegistrationCertificatePoolMargin';
import { PoolRegistrationCertificatePoolMetadata } from './PoolRegistrationCertificatePoolMetadata';
import { PoolRegistrationCertificatePoolPledge } from './PoolRegistrationCertificatePoolPledge';
import { HttpFile } from '../http/http';

/**
* Any certificate that could occur in an arbitrary transaction: might be related to delegation, pool activities, genesis or MIR. 
*/
export class DecodeTransaction202ResponseCertificatesInner {
    'certificateType': DecodeTransaction202ResponseCertificatesInnerCertificateTypeEnum;
    /**
    * A unique identifier for the pool.
    */
    'pool'?: string;
    'rewardAccountPath': Array<string>;
    'rewardAccount': string;
    /**
    * A unique identifier for the pool.
    */
    'poolId': string;
    'poolOwners': Array<string>;
    'poolMargin': PoolRegistrationCertificatePoolMargin;
    'poolCost': PoolRegistrationCertificatePoolCost;
    'poolPledge': PoolRegistrationCertificatePoolPledge;
    'poolMetadata'?: PoolRegistrationCertificatePoolMetadata;
    /**
    * An epoch is a time period which is divided into slots.
    */
    'retirementEpoch': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "certificateType",
            "baseName": "certificate_type",
            "type": "DecodeTransaction202ResponseCertificatesInnerCertificateTypeEnum",
            "format": ""
        },
        {
            "name": "pool",
            "baseName": "pool",
            "type": "string",
            "format": "hex|bech32"
        },
        {
            "name": "rewardAccountPath",
            "baseName": "reward_account_path",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "rewardAccount",
            "baseName": "reward_account",
            "type": "string",
            "format": "bech32"
        },
        {
            "name": "poolId",
            "baseName": "pool_id",
            "type": "string",
            "format": "hex|bech32"
        },
        {
            "name": "poolOwners",
            "baseName": "pool_owners",
            "type": "Array<string>",
            "format": "bech32"
        },
        {
            "name": "poolMargin",
            "baseName": "pool_margin",
            "type": "PoolRegistrationCertificatePoolMargin",
            "format": ""
        },
        {
            "name": "poolCost",
            "baseName": "pool_cost",
            "type": "PoolRegistrationCertificatePoolCost",
            "format": ""
        },
        {
            "name": "poolPledge",
            "baseName": "pool_pledge",
            "type": "PoolRegistrationCertificatePoolPledge",
            "format": ""
        },
        {
            "name": "poolMetadata",
            "baseName": "pool_metadata",
            "type": "PoolRegistrationCertificatePoolMetadata",
            "format": ""
        },
        {
            "name": "retirementEpoch",
            "baseName": "retirement_epoch",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DecodeTransaction202ResponseCertificatesInner.attributeTypeMap;
    }

    public constructor() {
    }
}


export type DecodeTransaction202ResponseCertificatesInnerCertificateTypeEnum = "mir" | "genesis" ;

