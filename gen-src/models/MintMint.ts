/**
 * Cardano Wallet Backend API
 * <p align=\"right\"><img style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"></img></p> 
 *
 * OpenAPI spec version: v2022-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class MintMint {
    /**
    * A sequence of characters that encodes (in Base58 or Bech32) a sequence of bytes which represents an address on the Cardano blockchain. Sequences in Base58 encoding are expected to be legacy Byron addresses, whereas sequences in Bech32 encoding correspond to current Shelley addresses.  For more details, see [CIP-0019 â€” Cardano addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019) . 
    */
    'receivingAddress'?: string;
    /**
    * Number of assets for the given `policy_id` and `asset_name`. 
    */
    'quantity': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "receivingAddress",
            "baseName": "receiving_address",
            "type": "string",
            "format": "base58|bech32"
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return MintMint.attributeTypeMap;
    }

    public constructor() {
    }
}

